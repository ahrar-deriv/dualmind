name: Build Release Packages

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          targets: aarch64-apple-darwin
      
      - name: Build for macOS (x86_64)
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Building DualMind v$VERSION for macOS (x86_64)"
          cargo build --release
          
          mkdir -p releases
          cp target/release/dualmind releases/dualmind-$VERSION-x86_64-macos
          cp .env.example releases/
          cp README.md releases/
      
      - name: Build for macOS (ARM64)
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Building DualMind v$VERSION for macOS (ARM64)"
          cargo build --release --target aarch64-apple-darwin
          
          cp target/aarch64-apple-darwin/release/dualmind releases/dualmind-$VERSION-arm64-macos
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: releases/*
  
  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Build for Linux (x86_64)
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Building DualMind v$VERSION for Linux (x86_64)"
          cargo build --release
          
          mkdir -p releases
          cp target/release/dualmind releases/dualmind-$VERSION-x86_64-linux
          cp .env.example releases/
          cp README.md releases/
      
      - name: Upload Linux x86_64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86-build
          path: releases/*
  
  create-release:
    needs: [build-macos, build-linux-x86]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: List downloaded files
        run: find . -type f | sort
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macos-build/*
            linux-x86-build/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 